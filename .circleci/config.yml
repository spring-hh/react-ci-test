version: 2.1

jobs:
  build:
    docker: circleci/node:14.15.3
    workig_directory: ~/repo
    steps:
      - checkout
      - run:
        name: Show current branch
        command: echo ${CURRENT_BRANCH}
      - restoere_cache:
        key:
          - app-{{ checksum "package.json" }}
          - app-
      - run:
        name: Install dependencies
        command: npm install
      - save_cache:
        path:
          - node_modules
        key: app-{{ checksum "package.json" }}

  deploy-to-aws-s3:
    docker: circleci/node:14.15.3
    workig_directory: ~/repo
    steps:
      - checkout
      - run:
        name: Show current branch
        command: echo ${CURRENT_BRANCH}
      - run:
        name: Installing aws-cli
        workig_directory: /
        command: |
          sudo apt-get -y -qq update
          sudo apt-get install -y awscli
          sudo apt-get install -y python-pip python-dev build-essential
      - run:
        name: Build Project
        command: |
          npm install
          npm run build
          cd build
          zip ../build.zip -r * .[^.]*
          echo "Build succesful"
      - run:
        name: Deploy to AWS S3
        command: |
          if [ ${CURRENT_BRANCH} == "master"]
          then
            aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete
          elif [ ${CURRENT_BRANCH} == "staging"]
          then
            aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
          else
            aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_DEV} --delete
          fi

  deploy-to-cloudfront:
    docker: circleci/node:14.15.3
    workig_directory: ~/repo
    steps:
      - checkout
      - run:
        name: Show current branch
        command: echo ${CURRENT_BRANCH}
      - run:
        name: Installing aws-cli
        workig_directory: /
        command: |
          sudo apt-get -y -qq update
          sudo apt-get install -y awscli
          sudo apt-get install -y python-pip python-dev build-essential
      - run:
        name: Build Project
        command: |
          npm install
          npm run build
          cd build
          zip ../build.zip -r * .[^.]*
          echo "Build succesful"
      - run:
        name: Deploy to AWS CouldFront
        command: |
          aws configure set preview.cloudfront
          if [ ${CURRENT_BRANCH} == "master"]
          then
            aws cloudfront create-invalidation --distribution-is ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
          elif [ ${CURRENT_BRANCH} == "staging"]
          then
            aws cloudfront create-invalidation --distribution-is ${STAGING_DISTRIBUTION_ID} --paths /\*
          else
            aws cloudfront create-invalidation --distribution-is ${DEV_DISTRIBUTION_ID} --paths /\*
          fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3
        requires:
          - build
        filters:
          branches:
            only:
              - develop
              - staging
              - master
      - deploy-to-cloudfront
        requires:
          - deploy-to-aws-s3
        filters:
          branches:
            only:
              - develop
              - staging
              - master